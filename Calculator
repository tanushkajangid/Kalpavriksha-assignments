#include <stdio.h>

//function for calculation
int calculator(char expr[], int *div_zero, int *invalid){
    int num[100];
    char ops[100]; 
    int oCount = 0, nCount = 0;
    int i = 0;
    while(expr[i] != '\0'){
        if (expr[i] == ' ') {  //to skip spaces
            i++;                
        } 
        else if(expr[i] >= '0' && expr[i] <= '9'){   //digits check
            int val = 0;
            while(expr[i] >= '0' && expr[i] <= '9'){
                val = val * 10 + (expr[i] - '0');
                i++;
            }
            num[nCount++] = val;
        } 
        else{  //for operators
            switch(expr[i]){
                case '+':
                case '-':
                case '*':
                case '/':
                    ops[oCount++] = expr[i];
                    i++;
                    break;
                default:
                    *invalid = 1;   
                    return 0;
            }
        }
    }

    // ensures DMAS precedence
    for(i=0; i<oCount; i++){           
        if(ops[i]=='*' || ops[i]=='/'){
            if(ops[i]=='/' && num[i+1]==0){  //handles div. by 0
                *div_zero = 1;
                return 0;
            }
            if(ops[i] == '*'){
                num[i] = num[i] * num[i+1];
            } 
            else{
                num[i] = num[i] / num[i+1];
            }
            for(int j=i+1;j<nCount-1;j++) num[j]=num[j+1];
            for(int j=i;j<oCount-1;j++) ops[j]=ops[j+1];
            nCount--;
            oCount--;
            i--;
        }
    }
    int result = num[0];
    for(i=0;i<oCount;i++){
        if(ops[i]=='+') result += num[i+1];
        else result -= num[i+1];
    }
    return result;
}

int main(){
    char expr[100];
    printf("Enter expression: ");
    scanf("%[^\n]", expr);   
    int div_zero = 0, invalid = 0;
    int result = calculator(expr, &div_zero, &invalid);
    if(div_zero) printf("Error: Division by zero.\n");
    else if(invalid) printf("Error: Invalid expression.\n");
    else printf("Result = %d\n", result);
    return 0;
}
